<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Snake Game</title>
  <style>
    body {
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      background-color: #f0f0f0;
      margin: 0;
      font-family: Arial, sans-serif;
    }

    canvas {
      border: 1px solid black;
      background-color: #000;
    }

    h1 {
      text-align: center;
      font-size: 30px;
    }
  </style>
</head>
<body>
  <h1>Snake Game</h1>
  <canvas id="gameCanvas" width="400" height="400"></canvas>
  <script>
    const canvas = document.getElementById('gameCanvas');
    const ctx = canvas.getContext('2d');

    const gridSize = 20;
    const tileCount = canvas.width / gridSize;

    let snake = [
      { x: 5, y: 5 }
    ];
    let snakeDirection = 'right';
    let food = { x: 8, y: 8 };
    let score = 0;

    // Game loop
    function gameLoop() {
      clearCanvas();
      moveSnake();
      checkCollisions();
      drawSnake();
      drawFood();
      drawScore();
      setTimeout(gameLoop, 170); // Adjust speed of the game here
    }

    // Clear the canvas
    function clearCanvas() {
      ctx.clearRect(0, 0, canvas.width, canvas.height);
    }

    // Draw the snake
    function drawSnake() {
      ctx.fillStyle = 'green';
      for (let i = 0; i < snake.length; i++) {
        ctx.fillRect(snake[i].x * gridSize, snake[i].y * gridSize, gridSize, gridSize);
      }
    }

    // Move the snake based on direction
    function moveSnake() {
      const head = { ...snake[0] };

      if (snakeDirection === 'right') head.x++;
      if (snakeDirection === 'left') head.x--;
      if (snakeDirection === 'up') head.y--;
      if (snakeDirection === 'down') head.y++;

      snake.unshift(head); // Add the new head to the front of the snake

      // Check if the snake eats the food
      if (head.x === food.x && head.y === food.y) {
        score++;
        generateFood();
      } else {
        snake.pop(); // Remove the last part of the snake if no food is eaten
      }
    }

    // Check for collisions
    function checkCollisions() {
      const head = snake[0];

      // Check if snake hits the wall
      if (head.x < 0 || head.x >= tileCount || head.y < 0 || head.y >= tileCount) {
        gameOver();
      }

      // Check if snake hits itself
      for (let i = 1; i < snake.length; i++) {
        if (snake[i].x === head.x && snake[i].y === head.y) {
          gameOver();
        }
      }
    }

    // Draw the food
    function drawFood() {
      ctx.fillStyle = 'red';
      ctx.fillRect(food.x * gridSize, food.y * gridSize, gridSize, gridSize);
    }

    // Generate a new food item at a random position
    function generateFood() {
      food.x = Math.floor(Math.random() * tileCount);
      food.y = Math.floor(Math.random() * tileCount);
    }

    // Draw the score
    function drawScore() {
      ctx.fillStyle = 'white';
      ctx.font = '20px Arial';
      ctx.fillText('Score: ' + score, 10, 30);
    }

    // Handle keyboard input
    document.addEventListener('keydown', (e) => {
      if (e.key === 'ArrowUp' && snakeDirection !== 'down') {
        snakeDirection = 'up';
      } else if (e.key === 'ArrowDown' && snakeDirection !== 'up') {
        snakeDirection = 'down';
      } else if (e.key === 'ArrowLeft' && snakeDirection !== 'right') {
        snakeDirection = 'left';
      } else if (e.key === 'ArrowRight' && snakeDirection !== 'left') {
        snakeDirection = 'right';
      }
    });

    // Game Over function
    function gameOver() {
      alert('Game Over! Final Score: ' + score);
      document.location.reload(); // Reload the game
    }

    // Start the game loop
    gameLoop();
  </script>
</body>
</html>
